{
  "_from": "com.ourpalm.ilruntime",
  "_id": "com.ourpalm.ilruntime@2.0.2",
  "_inBundle": false,
  "_integrity": "sha512-oqAIYCmgIdhai4is2IMWs0X2XH+c9PDe2JmW8ev7mK2SL4T+5c4to2w/l+WcANvbybpX1iQNLOiXvrSY3VtJ7A==",
  "_location": "/com.ourpalm.ilruntime",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "com.ourpalm.ilruntime",
    "name": "com.ourpalm.ilruntime",
    "escapedName": "com.ourpalm.ilruntime",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/com.ourpalm.ilruntime/-/com.ourpalm.ilruntime-2.0.2.tgz",
  "_shasum": "f1bbdea197aab6397e2657f3c3a65c696b75f50b",
  "_spec": "com.ourpalm.ilruntime",
  "_where": "G:\\11",
  "author": {
    "name": "Ourpalm",
    "email": "example@ourpal.com",
    "url": "https://github.com/Ourpalm/ILRuntime"
  },
  "bundleDependencies": false,
  "category": "Hotfix",
  "deprecated": false,
  "description": "ILRuntime\nC#热更解译器\n中文在线文档: https://ourpalm.github.io/ILRuntime/\n\rQQ群：512079820\n## 更新记录\n\r### V2.0.2\r\n- 修复意外引入的GC Alloc\r\n- 增加CLR自动生成参数，以应对泛型嵌套过深导致没有正确被自动分析捕捉\r\n- 修复一个类字段数量超过64个后一些情况下报错的Bug\r\n- 修复将扩展方法用于委托时的一个报错\n\n### V2.0.0\r\n- 加入寄存器运行模式，可大幅提升热更内数值计算性能\r\n- 执行性能整体提升，传统非寄存器模式执行效率也得到一定幅度提升\r\n- 修正热更内finnaly块在一些情况下不正确的bug，连带修复了yield return和async/await的一些异常情况\r\n- 修正值对类型绑定后的数组进行操作时的异常\r\n- 修正热更内Enum一些情况下Equals结果错误的bug\r\n- 修正跨域继承接口时的一些异常情况\r\n- 修正跨域继承时子类无法调用到子类方法的问题\r\n- 修正值类型绑定在一些情况下构造函数执行失败的bug\r\n- 修正反射接口无法获取父类public方法的bug\r\n- 修正嵌套数组在一些情况CLR绑定失败的bug\r\n- 修复值类型绑定后的值类型作为委托参数在一些情况下出现异常的Bug\r\n- 修正byte[]一些情况下取值出现强转失败的bug\r\n- 修正子类型在一些情况下调用+=，-=等重载操作符时异常的bug\r\n- 修正重载!操作符CLR绑定报错的bug\r\n- 修正值类型实现接口后new T时报错的bug\r\n- 修正一些情况下泛型匹配失败的Bug\r\n- 修正在try catch时重新抛出异常出错的Bug\r\n- 修正将委托保存在数组中可能出现调用异常的Bug",
  "displayName": "ILRuntime",
  "keywords": [
    "ILRuntime",
    "ilrt",
    "hotfix"
  ],
  "name": "com.ourpalm.ilruntime",
  "samples": [
    {
      "displayName": "Demo",
      "description": "示例中包含了ILRuntime的基础用法，反射的用法，CLR重定向/绑定，值类型绑定，Json序列化等的使用方式",
      "path": "Samples~/Basic Demo"
    }
  ],
  "type": "library",
  "unity": "2018.1",
  "version": "2.0.2"
}
