* 使用各种性能分析工具：GOT、GPM、URP并整合
* 不同平台代码库公用方案（前后端代码公用）
* 完善日志系统
	https://www.jianshu.com/p/5163b0a0180e
* UWorld, ULevel
* SortedArray
* QuadTree
* 二分图、二叉堆
* FX AUTOLOD
* 消息系统：
	https://blog.csdn.net/qq_33413868/article/details/104725966  
	https://blog.csdn.net/qq_33413868/article/details/104725268  
	https://blog.csdn.net/qq_33413868/article/details/104721686
	https://blog.csdn.net/luoyikun/article/details/79442201
	https://www.jianshu.com/p/bf82beb41f7f
* 配表方案：https://blog.csdn.net/linshuhe1/article/details/52062969
* 使用反射实现类UE的Config.ini全局数据配置机制
* UI框架设计：  UI开发与优化知识Tree(https://blog.uwa4d.com/archives/UWA_UITree.html)
	* 隐藏所有业务逻辑不需要关心的加载、卸载，界面流转等逻辑
	* 完整的业务流程
	* 提供界面扩展接口
	* Sprite Atlas流程：SpriteAtlasManager
	* MVVM，单向、双向数据绑定
	* 断线重连事件处理
	* Event是否发生在UI
	* 支持横竖屏
	* 支持自定义UI控件位置
	* 各种UI效果支持（羽化，描边等）
	* 特效挂载UI流程，资源分离，方便美术预览效果
	* 多种字体的支持，WGame只支持一种字体大小，且添加其他语种不友好，字体静态生成容易产生冗余，限制策划的使用
	* ResourceManager添加SpriteAtlas的管理
	* 如何卸载Atlas？https://github.com/jconstable/SpriteSleeper
		** 思考：prefab静态使用的散图可以预存为依赖图集，程序动态使用的图集需要用接口来约束
		** 只要Atlas被注册过，再次被引用到时不会调用RequestAtlas
		1、彻底卸载atlas ab：AssetBundle.unload（true）
		2、使用此atlas的gameobject被删除
	* 搭建美术UI制作环境(特效预览、分辨率适配等)
	* UIView跳转流程，参照新闻app的用户习惯设计

	参考：M4u、uFrame Framework、Loxodon Framework、https://github.com/jbruening/ugui-mvvm、https://github.com/push-pop/Unity-MVVM、https://github.com/chexiongsheng/XUUI

* UI Opt
	https://learn.unity.com/tutorial/optimizing-unity-ui
	* 没有勾选raycastTarget的Graphic从判定列表中移除：GraphicRegistry.UnregisterGraphicForCanvas。显示/隐藏时移除？见GraphicRaycaster.Raycast()
	* 优化GraphicRaycaster.eventCamera，没有缓存
	* 考虑当raycast时取消排序，始终返回最上层graphics，优化GraphicsRaycster::Raycast()
	* Graphics.canvasRenderer的判空操作过多，也有一定耗时，考虑组件各自在Awake中缓存
	* GraphicRaycaster减少depth获取次数，优化raycast函数
	* 减少点击事件响应的组件注册（原生Image即使不选择RaycastTarget也会出现在判定列表中），可以重写OnTransformParentChanged，OnCanvasHierarchyChanged
	* 不在屏幕内的UI不参与raycast，增加判定UI是否在屏幕内的接口，修改raycast函数









- Gesture Extension
	https://stackoverflow.com/questions/40341191/pinch-and-other-multi-finger-gestures-in-modern-unity3d
	https://stackoverflow.com/questions/40576493/duplicating-unitys-mystic-interface-power/40576974#40576974
- 嵌套Prefab的使用规范总结
- 可视化图集引用关系
- 尝试其他图集管理方法
1、check ”include in build"
2、图集和散图打在相同AB包中
3、不需要监听spriteAtlasManager
4、替换散图AB能热更
- 提供子文件夹的bundle name与父文件夹保持一致的功能
- 整理命名空间，s_XXX
- 整理所有Clear接口，仅清空数据，仍可用
- 添加MonoLRU，可制作为prefab，可视化配置
- GetOrCreatePoolInst RemoveMonoPoolInst重构至PoolManager
- SoftObject增加对IPooledObject对象加载的支持
- 增强显示：SoftObjectAttribute
- 支持SceneAsset的redirector
- SoftObject添加延时加载功能
- build from script
- SpawnerRing使用AB，PoolManager方式重制
- 参考GameFramework设置目录结构
- 打包出现modified的问题